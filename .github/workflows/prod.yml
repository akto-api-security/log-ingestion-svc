name: Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version for the auth-proxy deployment'
        required: true
      skipTests:
        description: 'Do you want to skip tests?'
        required: true
        default: 'False'
        type: choice
        options:
          - 'False'
          - 'True'

jobs:
  build-auth-proxy:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        if: ${{ github.event.inputs.skipTests == 'False' }}
        working-directory: ./auth-proxy
        run: go test -v ./...

      - name: Build binary
        working-directory: ./auth-proxy
        run: go build -o auth-proxy .

      - name: DockerHub login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build and push Docker image
        working-directory: ./auth-proxy
        env:
          ECR_REGISTRY: aktosecurity
          IMAGE_TAG_1: latest
          IMAGE_TAG_2: ${{ github.event.inputs.release_version }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/arm64/v8,linux/amd64 \
            -t $ECR_REGISTRY/akto-auth-proxy:$IMAGE_TAG_1 \
            -t $ECR_REGISTRY/akto-auth-proxy:$IMAGE_TAG_2 \
            . --push

      - name: Push git tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: auth-proxy-${{ github.event.inputs.release_version }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            Auth Proxy v${{ github.event.inputs.release_version }}
            
            Docker Image: `aktosecurity/akto-auth-proxy:${{ github.event.inputs.release_version }}`

      - name: Send release notification to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Auth Proxy v${{ github.event.inputs.release_version }} released!"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Create reports directory
        run: mkdir -p scout-reports

      - name: Analyze for critical and high CVEs
        uses: docker/scout-action@v1
        with:
          command: cves
          image: aktosecurity/akto-auth-proxy:${{ github.event.inputs.release_version }}
          sarif-file: scout-reports/auth-proxy.sarif
          only-severities: critical,high
          summary: true
        continue-on-error: true

      - name: Upload SARIF file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-scout-cve-reports
          path: scout-reports/
